spring.application.name=green-lit-engine

# Server configuration
server.port=8080
server.address=0.0.0.0

# Database configuration
#spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/green_lit?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=utf-8
#spring.datasource.username=root
#spring.datasource.password=test1234

# Druid connection pool configuration
spring.datasource.druid.initial-size=5
spring.datasource.druid.min-idle=5
spring.datasource.druid.max-active=20
spring.datasource.druid.max-wait=60000
spring.datasource.druid.time-between-eviction-runs-millis=60000
spring.datasource.druid.min-evictable-idle-time-millis=300000
spring.datasource.druid.validation-query=SELECT 1
spring.datasource.druid.test-while-idle=true
spring.datasource.druid.test-on-borrow=false
spring.datasource.druid.test-on-return=false
spring.datasource.druid.pool-prepared-statements=true
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
spring.datasource.druid.filters=stat,wall
spring.datasource.druid.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

# MyBatis configuration
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.type-aliases-package=com.keji.green.lit.engine.model
mybatis.configuration.map-underscore-to-camel-case=true
mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl

# JWT Configuration
jwt.secret=bXktc3VwZXItc2VjcmV0LWtleS1mb3ItZ3JlZW4tbGl0LWVuZ2luZS1wcm9qZWN0LTIwMjQtdmVyeS1zZWN1cmU=
jwt.expiration=864000000

# SMS verification code timeout in seconds
sms.verification.expiration=300

# Redis Configuration
spring.data.redis.host=localhost
spring.data.redis.port=6379
#spring.data.redis.password=
#spring.data.redis.database=0
spring.data.redis.timeout=2000
spring.data.redis.jedis.pool.max-active=8
spring.data.redis.jedis.pool.max-idle=8
spring.data.redis.jedis.pool.min-idle=0
spring.data.redis.jedis.pool.max-wait=-1

spring.main.allow-bean-definition-overriding=true
spring.shardingsphere.props.sql-show=true

# ??
spring.shardingsphere.datasource.name=m0

spring.shardingsphere.datasource.m0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.m0.url=jdbc:mysql://localhost:3306/green_lit?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=utf-8
spring.shardingsphere.datasource.m0.username=root
spring.shardingsphere.datasource.m0.password=test1234

# ???????long???id
spring.shardingsphere.rules.sharding.key-generators.alg_snowflake.type=SNOWFLAKE
spring.shardingsphere.rules.sharding.key-generators.alg_snowflake.props.worker-id=1
#
spring.shardingsphere.rules.sharding.tables.account.key-generate-strategy.column=user_id
spring.shardingsphere.rules.sharding.tables.account.key-generate-strategy.key-generator-name=alg_snowflake
# ????????
spring.shardingsphere.rules.sharding.tables.account.actual-data-nodes=m0.account$->{0..9}

spring.shardingsphere.rules.sharding.tables.account.database-strategy.standard.sharding-column=id
spring.shardingsphere.rules.sharding.tables.account.database-strategy.standard.sharding-algorithm-name=account_db_alg

spring.shardingsphere.rules.sharding.sharding-algorithms.account_db_alg.type=MOD
spring.shardingsphere.rules.sharding.sharding-algorithms.account_db_alg.props.sharding-count=10

# ?account????????standard??????????????
spring.shardingsphere.rules.sharding.tables.account.table-strategy.complex.sharding-columns=user_id
spring.shardingsphere.rules.sharding.tables.account.table-strategy.complex.sharding-algorithm-name=account_tbl_alg

# ??????
spring.shardingsphere.rules.sharding.sharding-algorithms.account_tbl_alg.type=CLASS_BASED
spring.shardingsphere.rules.sharding.sharding-algorithms.account_tbl_alg.props.strategy=COMPLEX
spring.shardingsphere.rules.sharding.sharding-algorithms.account_tbl_alg.props.algorithmClassName=com.keji.green.lit.engine.sharding.AccountAlgorithm


#spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=user_id
#spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=m0
#
#
#spring.shardingsphere.sharding.tables.account.database-strategy.inline.sharding-column=user_id
#spring.shardingsphere.sharding.tables.account.database-strategy.inline.algorithm-expression=m0
