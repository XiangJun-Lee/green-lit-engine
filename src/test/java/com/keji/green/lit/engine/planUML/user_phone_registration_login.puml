@startuml 手机用户注册登录流程
actor 用户
participant "前端服务" as Frontend
participant "业务服务(Java)" as Backend
participant "接码平台" as SMS
database 数据库 as DB

== 手机号注册流程 ==
用户 -> Frontend: 输入手机号
Frontend -> Backend: 提交手机号
Backend -> Backend: 验证手机号格式
Backend -> DB: 检查用户是否已存在
DB --> Backend: 返回检查结果
alt 用户不存在
    Frontend --> 用户: 显示验证码输入界面
    
    用户 -> Frontend: 点击"获取验证码"按钮
    Frontend -> Backend: 请求发送验证码
    Backend -> Backend: 检查请求频率限制

    alt 频率超限
        Backend --> Frontend: 返回请求过于频繁
        Frontend --> 用户: 提示"请稍后再试"
    else 频率正常
        Backend -> Backend: 生成6位验证码
        Backend -> SMS: 请求发送验证码到手机号
        SMS --> Backend: 返回请求结果
        Backend -> Backend: 缓存验证码(90秒过期时间)
        Frontend --> 用户: 显示倒计时(60秒)
    end
    
    用户 -> Frontend: 输入验证码和密码
    Frontend -> Backend: 提交验证码和手机号、密码
    Backend -> Backend: 验证验证码

    alt 验证成功
        Backend -> Backend: 清除验证码缓存
        Backend -> DB: 存储用户信息
        DB --> Backend: 确认存储成功
        Backend --> Frontend: 返回注册成功
        Frontend --> 用户: 显示注册成功
    else 验证失败
        Backend --> Frontend: 返回验证失败
        Frontend --> 用户: 提示验证码错误
    end
else 用户已存在
    Backend --> Frontend: 返回用户已存在
    Frontend --> 用户: 提示用户已注册
end

== 密码登录流程 ==
用户 -> Frontend: 输入手机号和密码
Frontend -> Backend: 提交手机号和密码
Backend -> DB: 验证用户信息
DB --> Backend: 返回用户数据
alt 验证成功
    Backend -> Backend: 生成用户Token
    Backend -> DB: 更新最近登录时间
    Backend --> Frontend: 返回登录成功和Token
    Frontend -> Frontend: 保存Token
    Frontend --> 用户: 跳转到面试列表页
else 验证失败
    Backend --> Frontend: 返回验证失败
    Frontend --> 用户: 显示错误信息
end

== 验证码登录流程 ==
用户 -> Frontend: 输入手机号
Frontend -> Backend: 提交手机号
Backend -> Backend: 验证手机号格式
Backend -> DB: 检查用户是否存在
DB --> Backend: 返回检查结果

alt 用户不存在
    Backend --> Frontend: 返回用户不存在
    Frontend --> 用户: 提示"请先注册"
else 用户存在
    Frontend --> 用户: 显示验证码输入界面
    
    用户 -> Frontend: 点击"获取验证码"按钮
    Frontend -> Backend: 请求发送验证码
    Backend -> DB: 检查请求频率限制
    DB --> Backend: 返回频率检查结果
    
    alt 频率超限
        Backend --> Frontend: 返回请求过于频繁
        Frontend --> 用户: 提示"请稍后再试"
    else 频率正常
        Backend -> Backend: 生成6位验证码
        Backend -> SMS: 请求发送验证码到手机号
        SMS --> Backend: 返回请求结果
        Backend -> Backend: 缓存验证码(90秒过期时间)
        Backend --> Frontend: 返回验证码请求成功
        Frontend --> 用户: 显示倒计时(60秒)
    end
    
    用户 -> Frontend: 输入验证码
    Frontend -> Backend: 提交验证码和手机号
    Backend -> Backend: 验证验证码

    alt 验证成功
        Backend -> Backend: 生成用户Token
        Backend -> DB: 更新登录状态和最近登录时间
        Backend --> Frontend: 返回登录成功和Token
        Frontend -> Frontend: 保存Token
        Frontend --> 用户: 跳转到用户主页
    else 验证失败
        Backend --> Frontend: 返回验证失败
        Frontend --> 用户: 提示验证码错误
    end
end

== 找回密码流程 ==
用户 -> Frontend: 点击"忘记密码"
Frontend --> 用户: 显示找回密码页面
用户 -> Frontend: 输入手机号
Frontend -> Backend: 提交手机号
Backend -> Backend: 验证手机号格式
Backend -> DB: 检查用户是否存在
DB --> Backend: 返回检查结果

alt 用户不存在
    Backend --> Frontend: 返回用户不存在
    Frontend --> 用户: 提示"手机号未注册"
else 用户存在
    Frontend --> 用户: 显示验证码输入界面
    
    用户 -> Frontend: 点击"获取验证码"按钮
    Frontend -> Backend: 请求发送验证码
    Backend -> DB: 检查请求频率限制
    DB --> Backend: 返回频率检查结果
    
    alt 频率超限
        Backend --> Frontend: 返回请求过于频繁
        Frontend --> 用户: 提示"请稍后再试"
    else 频率正常
        Backend -> Backend: 生成6位验证码
        Backend -> SMS: 请求发送验证码到手机号
        SMS --> Backend: 返回请求结果
        Backend -> Backend: 缓存验证码(90秒过期时间)
        Backend --> Frontend: 返回验证码请求成功
        Frontend --> 用户: 显示倒计时(60秒)
    end
    
    用户 -> Frontend: 输入验证码和新密码
    Frontend -> Backend: 提交验证码、手机号和新密码
    Backend -> Backend: 验证验证码
    
    alt 验证成功
        Backend -> DB: 更新用户密码
        DB --> Backend: 确认更新成功
        Backend --> Frontend: 返回密码重置成功
        Frontend --> 用户: 显示"密码已重置"并引导至登录页
    else 验证失败
        Backend --> Frontend: 返回验证失败
        Frontend --> 用户: 提示验证码错误
    end
end

@enduml 